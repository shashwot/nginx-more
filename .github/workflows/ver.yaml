# Major: v1.2.3 → v2.0.0
# Minor: v1.2.3 → v1.3.0
# Patch: v1.2.3 → v1.2.4

name: Create Tag and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_type:
        description: "Type of release (major, minor, patch)"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.1")
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Determine new version
        id: bump_version
        run: |
          latest_tag=${{ env.latest_tag }}
          IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}

          release_type="${{ github.event.inputs.release_type }}"
          if [ -z "$release_type" ]; then
            release_type="patch"
          fi

          case "$release_type" in
            major)
              new_tag="v$((major + 1)).0.0"
              ;;
            minor)
              new_tag="v$major.$((minor + 1)).0"
              ;;
            patch)
              new_tag="v$major.$minor.$((patch + 1))"
              ;;
            *)
              echo "Invalid release type: $release_type"
              exit 1
              ;;
          esac

          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Create new tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.new_tag }}
          name: Release ${{ env.new_tag }}
          draft: false
          prerelease: false
          body: "Automated release for ${{ env.new_tag }}"
